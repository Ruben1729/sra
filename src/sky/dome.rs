use crate::sky::patch::SkyPatch;

pub const SKY_PATCH_COUNT: usize = 145;
const SKY_AZIMUTHAL_STRIPS: usize = 8;
const SKY_AZIMUTHAL_RANGES: [f32; SKY_AZIMUTHAL_STRIPS] = [12., 12., 15., 15., 20., 30., 60., 360.];

#[repr(C)]
#[derive(Debug)]
pub struct SkyDome {
    patches: [SkyPatch; SKY_PATCH_COUNT],
}

impl Default for SkyDome {
    fn default() -> Self {
        Self::new()
    }
}

impl SkyDome {
    pub fn new() -> Self {
        let mut altitude: f32 = 6.;
        let altitude_range: f32 = 12.;

        let mut azimuth: f32;

        let mut patch_counter = 0;
        let mut patches = [SkyPatch::default(); SKY_PATCH_COUNT];

        for azimuth_range in SKY_AZIMUTHAL_RANGES {
            azimuth = 0.;
            for _ in 0..(360. / azimuth_range).round() as usize {
                patches[patch_counter].set_altitude(altitude.to_radians());
                patches[patch_counter].set_azimuth(azimuth.to_radians());
                patches[patch_counter].set_azimuth_range(azimuth_range.to_radians());

                azimuth += azimuth_range;

                patch_counter += 1;
            }

            altitude += altitude_range;
        }

        Self { patches }
    }

    pub fn patches(&self) -> &[SkyPatch] {
        &self.patches
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn sky_patch_generation() {
        let altitude_results: [f32; SKY_PATCH_COUNT] = [
            0.10471976, 0.10471976, 0.10471976, 0.10471976, 0.10471976, 0.10471976, 0.10471976,
            0.10471976, 0.10471976, 0.10471976, 0.10471976, 0.10471976, 0.10471976, 0.10471976,
            0.10471976, 0.10471976, 0.10471976, 0.10471976, 0.10471976, 0.10471976, 0.10471976,
            0.10471976, 0.10471976, 0.10471976, 0.10471976, 0.10471976, 0.10471976, 0.10471976,
            0.10471976, 0.10471976, 0.31415927, 0.31415927, 0.31415927, 0.31415927, 0.31415927,
            0.31415927, 0.31415927, 0.31415927, 0.31415927, 0.31415927, 0.31415927, 0.31415927,
            0.31415927, 0.31415927, 0.31415927, 0.31415927, 0.31415927, 0.31415927, 0.31415927,
            0.31415927, 0.31415927, 0.31415927, 0.31415927, 0.31415927, 0.31415927, 0.31415927,
            0.31415927, 0.31415927, 0.31415927, 0.31415927, 0.5235988, 0.5235988, 0.5235988,
            0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988,
            0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988,
            0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.7330383, 0.7330383, 0.7330383,
            0.7330383, 0.7330383, 0.7330383, 0.7330383, 0.7330383, 0.7330383, 0.7330383, 0.7330383,
            0.7330383, 0.7330383, 0.7330383, 0.7330383, 0.7330383, 0.7330383, 0.7330383, 0.7330383,
            0.7330383, 0.7330383, 0.7330383, 0.7330383, 0.7330383, 0.94247776, 0.94247776,
            0.94247776, 0.94247776, 0.94247776, 0.94247776, 0.94247776, 0.94247776, 0.94247776,
            0.94247776, 0.94247776, 0.94247776, 0.94247776, 0.94247776, 0.94247776, 0.94247776,
            0.94247776, 0.94247776, 1.1519173, 1.1519173, 1.1519173, 1.1519173, 1.1519173,
            1.1519173, 1.1519173, 1.1519173, 1.1519173, 1.1519173, 1.1519173, 1.1519173, 1.3613569,
            1.3613569, 1.3613569, 1.3613569, 1.3613569, 1.3613569, 1.5707964,
        ];
        let azimuth_results: [f32; SKY_PATCH_COUNT] = [
            0., 0.20943952, 0.41887903, 0.62831855, 0.83775806, 1.0471976, 1.2566371, 1.4660766,
            1.6755161, 1.8849555, 2.0943952, 2.3038347, 2.5132742, 2.7227137, 2.9321532, 3.1415927,
            3.3510323, 3.5604715, 3.769911, 3.9793506, 4.1887903, 4.3982296, 4.6076694, 4.8171086,
            5.0265484, 5.2359877, 5.4454274, 5.6548667, 5.8643064, 6.0737457, 0., 0.20943952,
            0.41887903, 0.62831855, 0.83775806, 1.0471976, 1.2566371, 1.4660766, 1.6755161,
            1.8849555, 2.0943952, 2.3038347, 2.5132742, 2.7227137, 2.9321532, 3.1415927, 3.3510323,
            3.5604715, 3.769911, 3.9793506, 4.1887903, 4.3982296, 4.6076694, 4.8171086, 5.0265484,
            5.2359877, 5.4454274, 5.6548667, 5.8643064, 6.0737457, 0., 0.2617994, 0.5235988,
            0.7853982, 1.0471976, 1.3089969, 1.5707964, 1.8325957, 2.0943952, 2.3561945, 2.6179938,
            2.8797932, 3.1415927, 3.403392, 3.6651914, 3.9269907, 4.1887903, 4.4505897, 4.712389,
            4.9741883, 5.2359877, 5.497787, 5.7595863, 6.0213857, 0., 0.2617994, 0.5235988,
            0.7853982, 1.0471976, 1.3089969, 1.5707964, 1.8325957, 2.0943952, 2.3561945, 2.6179938,
            2.8797932, 3.1415927, 3.403392, 3.6651914, 3.9269907, 4.1887903, 4.4505897, 4.712389,
            4.9741883, 5.2359877, 5.497787, 5.7595863, 6.0213857, 0., 0.34906584, 0.6981317,
            1.0471976, 1.3962634, 1.7453293, 2.0943952, 2.443461, 2.7925267, 3.1415927, 3.4906585,
            3.8397243, 4.1887903, 4.537856, 4.886922, 5.2359877, 5.5850534, 5.934119, 0., 0.5235988,
            1.0471976, 1.5707964, 2.0943952, 2.6179938, 3.1415927, 3.6651914, 4.1887903, 4.712389,
            5.2359877, 5.7595863, 0., 1.0471976, 2.0943952, 3.1415927, 4.1887903, 5.2359877, 0.,
        ];

        let azimuth_range_results: [f32; SKY_PATCH_COUNT] = [
            0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952,
            0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952,
            0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952,
            0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952,
            0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952,
            0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952,
            0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952,
            0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.20943952,
            0.20943952, 0.20943952, 0.20943952, 0.20943952, 0.2617994, 0.2617994, 0.2617994,
            0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994,
            0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994,
            0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994,
            0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994,
            0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994,
            0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.2617994, 0.34906584, 0.34906584,
            0.34906584, 0.34906584, 0.34906584, 0.34906584, 0.34906584, 0.34906584, 0.34906584,
            0.34906584, 0.34906584, 0.34906584, 0.34906584, 0.34906584, 0.34906584, 0.34906584,
            0.34906584, 0.34906584, 0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988,
            0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988, 0.5235988, 1.0471976,
            1.0471976, 1.0471976, 1.0471976, 1.0471976, 1.0471976, 6.2831855,
        ];

        let dome = SkyDome::default();

        for (idx, patch) in dome.patches.iter().enumerate() {
            assert_eq!(patch.azimuth(), azimuth_results[idx]);
            assert_eq!(patch.altitude(), altitude_results[idx]);
            assert_eq!(patch.azimuth_range(), azimuth_range_results[idx]);
        }
    }
}
